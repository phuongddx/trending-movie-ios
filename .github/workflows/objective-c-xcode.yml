name: iOS CI

on:
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    name: Clean, Build, and Unit Test
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Default Scheme
        id: set-scheme
        run: |
          scheme_list=$(xcodebuild -list -json)
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.read)['project']['targets'][0]")
          echo "default_scheme=$default" >> $GITHUB_ENV
          echo Using default scheme: $default

      - name: Clean Build Folder
        run: |
          scheme=${{ env.default_scheme }}
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then 
            filetype_parameter="workspace" 
            file_to_build="`ls -A | grep -i \\.xcworkspace\$`"
          else 
            filetype_parameter="project" 
            file_to_build="`ls -A | grep -i \\.xcodeproj\$`"
          fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild clean -scheme "$scheme" -"$filetype_parameter" "$file_to_build"

      - name: Build
        run: |
          scheme=${{ env.default_scheme }}
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then 
            filetype_parameter="workspace" 
            file_to_build="`ls -A | grep -i \\.xcworkspace\$`"
          else 
            filetype_parameter="project" 
            file_to_build="`ls -A | grep -i \\.xcodeproj\$`"
          fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild build -scheme "$scheme" -"$filetype_parameter" "$file_to_build" | xcpretty

      - name: Run Unit Tests
        run: |
          scheme=${{ env.default_scheme }}
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then 
            filetype_parameter="workspace" 
            file_to_build="`ls -A | grep -i \\.xcworkspace\$`"
          else 
            filetype_parameter="project" 
            file_to_build="`ls -A | grep -i \\.xcodeproj\$`"
          fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild test -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -skip-testing:"trending-movie-iosUITests" | xcpretty && exit ${PIPESTATUS[0]}